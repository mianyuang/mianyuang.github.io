(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{497:function(t,e,a){"use strict";a.r(e);var s=a(65),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react-路由6版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react-路由6版本"}},[t._v("#")]),t._v(" React-路由6版本")]),t._v(" "),a("h4",{attrs:{id:"与5版本相比-改变了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与5版本相比-改变了什么"}},[t._v("#")]),t._v(" 与5版本相比，改变了什么？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("内置组件的变化，移除"),a("code",[t._v("<Switch/>")]),t._v("，新增"),a("code",[t._v("<Routes />")]),t._v("组件")])]),t._v(" "),a("li",[a("p",[t._v("语法的变化："),a("code",[t._v("component={About}")]),t._v("变为"),a("code",[t._v("element={<About />}")])])]),t._v(" "),a("li",[a("p",[t._v("新增多个hook："),a("code",[t._v("useParams")]),t._v("，"),a("code",[t._v("useNavigate")]),t._v("，"),a("code",[t._v("useMatch")]),t._v("等")])]),t._v(" "),a("li",[a("p",[t._v("官方明确推荐函数式组件了")])])]),t._v(" "),a("h4",{attrs:{id:"component的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#component的使用"}},[t._v("#")]),t._v(" Component的使用")]),t._v(" "),a("p",[a("strong",[t._v("<Navigate>")])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("作用：只要<Navigate>组件被渲染，就会修改路径，切换视图")])]),t._v(" "),a("li",[a("p",[t._v("replace属性用于控制跳转模式（push或replace，默认是push）")])]),t._v(" "),a("li",[a("p",[t._v("示例代码：可以做重定向路由")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react'\nimport {NavLink,Route,Routes,Navigate} from 'react-router-dom'\nimport Home from './Home'\nimport About from './About'\nexport default function Demo() {\n  return (\n    <div>\n        <div>\n            <NavLink to='/about'>About</NavLink>\n            <NavLink to='/home'>Home</NavLink>\n        </div>\n        <div>\n            <Routes>\n                <Route path='/about' element={<About></About>} />\n                <Route path='/home' element={<Home></Home>} />\n                <Route path='/' element={<Navigate to='/about' ></Navigate>}></Route>\n            </Routes>\n        </div>\n    </div>\n  )\n}\n\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"routes-与-route"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#routes-与-route"}},[t._v("#")]),t._v(" <Routes/> 与<Route />")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("v6版本移除了"),a("code",[t._v("Switch")]),t._v("组件，引进了新的代替者"),a("code",[t._v("<Routes>")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<Routes>")]),t._v("与"),a("code",[t._v("<Route>")]),t._v("要配合使用，且必须要用"),a("code",[t._v("<Routes>")]),t._v("包裹"),a("code",[t._v("<Route>")])])]),t._v(" "),a("li",[a("p",[t._v("<Route>相当于一个if语句，如果其路径与当前路径URL匹配，则呈现其对应的组件")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<Route caseSensitive>")]),t._v("属性用于指定：匹配时是否区分大小写（默认false）")])]),t._v(" "),a("li",[a("p",[t._v("当URL发生变化时，"),a("code",[t._v("<Routes>")]),t._v("都会查看其所有子"),a("code",[t._v("<Route>")]),t._v("元素以找到最佳匹配并呈现组件")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("<Route>")]),t._v("也可以嵌套使用，且可以配合"),a("code",[t._v("useRoutes()")]),t._v("配置路由表，但需要通过"),a("code",[t._v("<outlet>")]),t._v("组件来渲染其子路由")])])]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<Routes>\n    <Route path='/about' element={<About></About>} />\n    <Route path='/home' element={<Home></Home>} />\n    <Route path='/' element={<Navigate to='/about' ></Navigate>}></Route>\n</Routes>\n")])])]),a("h4",{attrs:{id:"navlink"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#navlink"}},[t._v("#")]),t._v(" NavLink")]),t._v(" "),a("p",[t._v("自定义高亮样式可以通过className属性赋值一个函数指定或者style接收一个函数指定。")]),t._v(" "),a("p",[t._v("该函数接收一个{active}参数表示是否激活来返回你想要的自定义样式。")]),t._v(" "),a("p",[t._v("属性end表示在当前路由下在点击它的子路由，会把当前路由高亮效果去掉")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react'\nimport {NavLink,Route,Routes,Navigate} from 'react-router-dom'\nimport Home from './Home'\nimport About from './About'\nexport default function Demo() {\n  return (\n    <div>\n        <div>\n            <NavLink to='/about' style={({isActive})=> isActive?{color:'yellow'}:{color:'blue'}}>About</NavLink>\n            <NavLink to='/home' style={({isActive})=>isActive?{color:'yellow'}:{color:'blue'}}>Home</NavLink>\n        </div>\n        <div>\n            <Routes>\n                <Route path='/about' element={<About></About>} />\n                <Route path='/home' element={<Home></Home>} />\n                <Route path='/' element={<Navigate to='/about' ></Navigate>}></Route>\n            </Routes>\n        </div>\n    </div>\n  )\n}\n\n")])])]),a("h4",{attrs:{id:"useroutes路由表使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#useroutes路由表使用"}},[t._v("#")]),t._v(" useRoutes路由表使用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用useRoutes创建路由表")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react'\nimport {NavLink,Route,Routes,Navigate,useRoutes} from 'react-router-dom'\nimport Home from './Home'\nimport About from './About'\nexport default function Demo() {\n    const routes =useRoutes([\n        {path:'/about',element:<About />},\n        {path:'/home',element:<Home />},\n        {path:'/',element:<Navigate to='/about'/>},\n    ]) \n  return (\n    <div>\n        <div>\n            <NavLink to='/about' style={({isActive})=> isActive?{color:'yellow'}:{color:'blue'}}>About</NavLink>\n            <NavLink to='/home' style={({isActive})=>isActive?{color:'yellow'}:{color:'blue'}}>Home</NavLink>\n        </div>\n        <div>\n            {/* <Routes>\n                <Route path='/about' element={<About></About>} />\n                <Route path='/home' element={<Home></Home>} />\n                <Route path='/' element={<Navigate to='/about' ></Navigate>}></Route>\n            </Routes> */}\n            {routes}\n        </div>\n    </div>\n  )\n}\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"嵌套路由使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套路由使用"}},[t._v("#")]),t._v(" 嵌套路由使用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("编写好路由,主要是chilrren属性")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' const routes = useRoutes([\n    { path: "/about", element: <About /> },\n    { path: "/home", element: <Home />, children: [{path:"news",element:<New></New>},{path:\'message\',element:<Message></Message>}] },\n    { path: "/", element: <Navigate to="/about" /> },\n  ]);\n')])])])]),t._v(" "),a("li",[a("p",[t._v("使用OutLet组件占用位置，类似vue中的router-view，把路由组件显示在该位置")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("import React from 'react'\nimport { NavLink,Outlet } from 'react-router-dom'\n\nexport default function Home() {\n  return (\n    <div>\n        <div>\n            <NavLink to='news'>news</NavLink>\n            <NavLink to='message'>message</NavLink>\n        </div>\n        <div>\n            <Outlet></Outlet>\n        </div>\n    </div>\n  )\n}\n\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"路由传参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由传参"}},[t._v("#")]),t._v(" 路由传参")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("传递params参数")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("NavLink组件写好要传递的params参数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<NavLink to={`detail/${m.id}/${m.title}/${m.content}`}>{m.title}</NavLink>\n")])])])]),t._v(" "),a("li",[a("p",[t._v("useRoutes写好路由接收参数数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n   path:'detail/:id/:title/:content',\n   element:<Detail></Detail>\n}\n")])])])]),t._v(" "),a("li",[a("p",[t._v("useParams使用接收过来的参数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const {id,title,content} = useParams()\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("传递search参数")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("NavLink组件写好要传递的search参数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<NavLink to={`detail?id=${m.id}&title=${m.title}&content=${m.content}`}>{m.title}</NavLink>\n")])])])]),t._v(" "),a("li",[a("p",[t._v("useRoutes写好路由接收参数数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n   path:'detail',\n   element:<Detail></Detail>\n}\n")])])])]),t._v(" "),a("li",[a("p",[t._v("useSearchParams使用接收过来的参数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" const [search] = useSearchParams()\n  let id,title,content ;\n  id = search.get('id');\n  title = search.get('title');\n  content = search.get('content');\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("传递state参数")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("NavLink组件写好要传递的state参数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<NavLink to='detail' state={{id:m.id,title:m.title,content:m.content}}>{m.title}</NavLink>\n")])])])]),t._v(" "),a("li",[a("p",[t._v("useRoutes写好路由接收参数数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{\n   path:'detail',\n   element:<Detail></Detail>\n}\n")])])])]),t._v(" "),a("li",[a("p",[t._v("useLocation使用接收过来的参数")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const {id,title,content} = useLocation().state\n")])])])])])])]),t._v(" "),a("h4",{attrs:{id:"编程式路由导航"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程式路由导航"}},[t._v("#")]),t._v(" 编程式路由导航")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("使用useNavigate函数实现")]),t._v(" "),a("div",{staticClass:"language-react&#x20;jsx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("const navigate = useNavigate();\nnavigate('detail',{state:{id:m.id,title:m.title,content:m.content}})\n\n")])])])])])])}),[],!1,null,null,null);e.default=o.exports}}]);